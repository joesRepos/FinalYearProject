{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatPage() {\n  _s();\n  const [chatLogs, setChatLogs] = useState([]);\n  const [loginType, setLoginType] = useState([]);\n  const [userID, setUserID] = useState([]);\n  const [requestID, setRequestID] = useState([]);\n  useEffect(() => {\n    setLoginType(sessionStorage.getItem(\"LoginType\"));\n    setRequestID(sessionStorage.getItem(\"ChatRequestID\"));\n    setUserID(sessionStorage.getItem(\"Username\"));\n    console.log(sessionStorage.getItem(\"Username\"));\n    fetch(\"/api/get-chat-logs\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: [sessionStorage.getItem(\"ChatRequestID\")]\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data[0]);\n      setChatLogs(data[0]);\n    }).catch(error => console.error(error));\n  }, []);\n  function DisplayPreviousChat() {\n    let rows = [];\n    if (chatLogs.chat === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Start the discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  function AddChat() {\n    var currentDate = new Date();\n    let newChat = document.getElementById(\"chatEnter\").value;\n    let dateTime = {\n      day: currentDate.getDay(),\n      month: currentDate.getMonth() + 1,\n      year: currentDate.getFullYear(),\n      hour: currentDate.getHours(),\n      minutes: currentDate.getMinutes()\n    };\n    console.log(dateTime);\n    let data = {\n      sender: userID,\n      message: newChat,\n      sent: dateTime\n    };\n    let chat = [];\n    if (chatLogs.chat === null) {\n      chat.push(data);\n    } else {\n      chat = Array.from(chatLogs);\n      chat.push(data);\n    }\n    setChatLogs(chat);\n    console.log(chat);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conversation \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayPreviousChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"chatEnter\",\n        placeholder: \"Chat\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: AddChat,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n}\n_s(ChatPage, \"l4wmnR2jwIyWrXkx2eWa110Eax4=\");\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ChatPage","_s","chatLogs","setChatLogs","loginType","setLoginType","userID","setUserID","requestID","setRequestID","sessionStorage","getItem","console","log","fetch","method","body","JSON","stringify","data","headers","then","response","json","catch","error","DisplayPreviousChat","rows","chat","children","fileName","_jsxFileName","lineNumber","columnNumber","AddChat","currentDate","Date","newChat","document","getElementById","value","dateTime","day","getDay","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","sender","message","sent","push","Array","from","type","id","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/ChatPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n\nexport default function ChatPage() {\n    const [chatLogs, setChatLogs] = useState([]);\n    const [loginType, setLoginType] = useState([]);\n    const [userID, setUserID] = useState([]);\n    const [requestID, setRequestID] = useState([]);\n    useEffect(() => {\n        setLoginType(sessionStorage.getItem(\"LoginType\"));\n        setRequestID(sessionStorage.getItem(\"ChatRequestID\"));\n        setUserID(sessionStorage.getItem(\"Username\"));\n        console.log(sessionStorage.getItem(\"Username\"));\n        fetch(\"/api/get-chat-logs\", {\n            method: 'POST',\n            body: JSON.stringify({data: [sessionStorage.getItem(\"ChatRequestID\")]}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data[0]);\n            setChatLogs(data[0]);\n        })\n        .catch(error => console.error(error))\n    }, []);\n\n    function DisplayPreviousChat() {\n        let rows = [];\n        if (chatLogs.chat === null) {\n            return <div>Start the discussion</div>\n        }\n    }\n\n    function AddChat() {\n        var currentDate = new Date();\n        let newChat = document.getElementById(\"chatEnter\").value;\n        let dateTime = {\n            day: currentDate.getDay(),\n            month: (currentDate.getMonth() + 1),\n            year: currentDate.getFullYear(),\n            hour: currentDate.getHours(),\n            minutes: currentDate.getMinutes()\n        }\n        console.log(dateTime);\n        let data = {\n            sender: userID,\n            message: newChat,\n            sent: dateTime\n        }\n        let chat = [];\n        if (chatLogs.chat === null) {\n            chat.push(data);\n        }\n        else {\n            chat = Array.from(chatLogs); \n            chat.push(data); \n        }\n        setChatLogs(chat);\n        console.log(chat);\n    }\n    return <div>\n        <div>\n            <h1>Conversation </h1>\n            <DisplayPreviousChat/>\n            <input type=\"text\" id =\"chatEnter\" placeholder=\"Chat\" required/>\n            <button type=\"button\" id=\"button\" onClick={AddChat}>Send</button>\n        </div>\n    </div>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}