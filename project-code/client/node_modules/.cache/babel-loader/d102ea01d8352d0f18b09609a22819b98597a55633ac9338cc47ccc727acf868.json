{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/NewModulePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n//import './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateNewModulePage() {\n  _s();\n  const navigate = useNavigate();\n  const [newModuleCode, setNewModuleCode] = useState([]);\n  const [editForm, setEditForm] = useState([]);\n  const [allStaff, setAllStaff] = useState([]);\n  const [allModules, setAllModules] = useState([]);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [creating, setCreating] = useState([]);\n  const [currentType, setCurrentType] = useState([]);\n  const [currentID, setCurrentID] = useState([]);\n  const [currentOptions, setCurrentOptions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState([]);\n  useEffect(() => {\n    setEditForm(sessionStorage.getItem(\"EditForm\"));\n    if (sessionStorage.getItem(\"EditForm\")) {\n      fetch(\"/api/get-edit-module-data\", {\n        method: 'POST',\n        body: JSON.stringify({\n          data: [sessionStorage.getItem(\"NewModuleCode\")]\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        if (data === \"EMPTY\") {\n          sessionStorage.setItem(\"EditForm\", false);\n        } else {\n          document.getElementById(\"newModuleTitle\").value = data.name;\n          document.getElementById(\"newModuleSchool\").value = data.school;\n          setAllQuestions(JSON.parse(data.requestData));\n          setCurrentID(JSON.parse(data.requestData).length);\n        }\n      });\n      document.getElementById(\"newModuleTitle\").value = sessionStorage.getItem(\"NewModuleCode\");\n    }\n    setCurrentID(0);\n    setNewModuleCode(sessionStorage.getItem(\"NewModuleCode\"));\n    setCreating(false);\n    fetch(\"/api/get-all-staff\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setAllStaff(data);\n    });\n    fetch(\"/api/get-all-modules\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setAllModules(data);\n    });\n  }, []);\n  function StaffSelection() {\n    let rows = [];\n    for (let staff of allStaff) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: staff.staffID,\n        children: staff.staffID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this));\n    }\n    return rows;\n  }\n  function DisplayQuestionConstrcutor() {\n    let rows = [];\n    if (!creating) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add Question: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"newQuestion\",\n        name: \"newQuestion\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"multiChoice\",\n          children: \"Multiple choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"multiChoiceVarious\",\n          children: \"Multiple selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"textBox\",\n          children: \"Text box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: StartQuestion,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }, this));\n      return rows;\n    } else if (currentType === \"textBox\") {\n      rows.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter the question: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"question\",\n        placeholder: \"QUESTION\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: addTextBoxQuestion,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 23\n      }, this));\n      return rows;\n    } else if (currentType === \"multiChoice\" || currentType === \"multiChoiceVarious\") {\n      if (currentQuestion.length === 0) {\n        rows.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter the question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 27\n        }, this));\n        rows.push( /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"question\",\n          placeholder: \"QUESTION\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 27\n        }, this));\n        rows.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"button\",\n          onClick: SetQuestion,\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }, this));\n      } else {\n        rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: currentQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DisplayQuestionOptions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"questionOption\",\n            placeholder: \"OPTION\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"button\",\n            onClick: AddOption,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"button\",\n            onClick: AddSelectionQuestion,\n            children: \"Finish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this));\n      }\n      return rows;\n    }\n  }\n  function AddSelectionQuestion() {\n    console.log(currentID);\n    if (currentOptions.length < 2) {\n      alert(\"A multiple choice question must have at least two options.\");\n    } else {\n      let data = {\n        id: currentID,\n        type: currentType,\n        question: currentQuestion,\n        options: currentOptions\n      };\n      setAllQuestions(prevArray => [...prevArray, data]);\n      setCreating(false);\n      setCurrentID(currentID + 1);\n      setCurrentOptions(\"\");\n      setCurrentQuestion(\"\");\n    }\n  }\n  function SetQuestion() {\n    let question = document.getElementById(\"question\").value;\n    setCurrentQuestion(question);\n  }\n  function AddOption() {\n    let newOption = document.getElementById(\"questionOption\").value;\n    if (newOption === \"\") {\n      alert(\"The option is empty.\");\n    } else {\n      setCurrentOptions(prevArray => [...prevArray, newOption]);\n    }\n  }\n  function DisplayQuestionOptions() {\n    let rows = [];\n    for (let option of currentOptions) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [option, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"button\",\n          onClick: () => DeleteOption(option),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this));\n    }\n    rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }, this));\n    return rows;\n  }\n  function addTextBoxQuestion() {\n    console.log(currentID);\n    let newQuestion = document.getElementById(\"question\").value;\n    let data = {\n      id: currentID,\n      type: 'textBox',\n      question: newQuestion\n    };\n    setAllQuestions(prevArray => [...prevArray, data]);\n    setCreating(false);\n    setCurrentID(currentID + 1);\n  }\n  function DeleteOption(toDelete) {\n    setCurrentOptions(currentOptions.filter(item => item !== toDelete));\n  }\n  function DisplayQuestions() {\n    if (allQuestions.length === 0 || allQuestions === null) {\n      return;\n    }\n    let rows = [];\n    for (let currentQuestion of allQuestions) {\n      if (currentQuestion.type === \"textBox\") {\n        rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Text Box Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 27\n        }, this));\n        rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Question: \", currentQuestion.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }, this));\n        rows.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"button\",\n          onClick: () => RemoveQuestion(currentQuestion.id),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 27\n        }, this));\n        rows.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"button\",\n          onClick: () => MoveQuestion(currentQuestion.id, -1),\n          children: \"DOWN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 27\n        }, this));\n        rows.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"button\",\n          onClick: () => MoveQuestion(currentQuestion.id, 1),\n          children: \"UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }, this));\n      } else if (currentQuestion.type === \"multiChoice\" || currentQuestion.type === \"multiChoiceVarious\") {\n        rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Text Box Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Question: \", currentQuestion.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Options: \", currentQuestion.options.join(' | ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"button\",\n            onClick: () => RemoveQuestion(currentQuestion.id),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"button\",\n            onClick: () => MoveQuestion(currentQuestion.id, -1),\n            children: \"DOWN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"button\",\n            onClick: () => MoveQuestion(currentQuestion.id, 1),\n            children: \"UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this));\n      }\n    }\n    return rows;\n  }\n  function ModuleSelection() {\n    let rows = [];\n    rows.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }, this));\n    for (let module of allModules) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: module.moduleCode,\n        children: module.moduleCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }, this));\n    }\n    return rows;\n  }\n  function RemoveQuestion(deleteID) {\n    let deleted = false;\n    let deleteIndex = 0;\n    for (let i = 0; i < allQuestions.length; i++) {\n      if (deleted) {\n        allQuestions[i].id = i - 1;\n      }\n      if (allQuestions[i].id == deleteID && !deleted) {\n        deleteIndex = i;\n        deleted = true;\n      }\n    }\n    let newQuestions = [];\n    for (let i = 0; i < allQuestions.length; i++) {\n      if (i !== deleteIndex) {\n        newQuestions.push(allQuestions[i]);\n      }\n    }\n    setAllQuestions(newQuestions);\n  }\n  function MoveQuestion(id, move) {\n    let replacement = allQuestions[0];\n    let placeholder = Array.from(allQuestions);\n    for (let i = 0; i < allQuestions.length; i++) {\n      if (move > 0 && allQuestions[i].id === id && i != 0 || move < 0 && allQuestions[i].id === id && i != allQuestions.length - 1) {\n        replacement = placeholder[i - move];\n        placeholder[i - move] = placeholder[i];\n        placeholder[i] = replacement;\n      }\n    }\n    setAllQuestions(placeholder);\n  }\n  function StartQuestion() {\n    let questionType = document.getElementById(\"newQuestion\").value;\n    setCurrentType(questionType);\n    setCreating(true);\n  }\n  function ImportQuestions() {\n    let moduleSelected = document.getElementById(\"importModule\").value;\n    fetch(\"/api/get-module-questions\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: [moduleSelected]\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (JSON.parse(data[0].requestData) !== null) {\n        setAllQuestions(JSON.parse(data[0].requestData));\n      }\n    });\n  }\n  function CreateForm() {\n    let reveiwers = document.getElementById(\"reviewers\");\n    let moduleName = document.getElementById(\"newModuleTitle\").value;\n    let school = document.getElementById(\"newModuleSchool\").value;\n    let firstReviewer = document.getElementById(\"firstStaff\").value;\n    let reviewersArray = [];\n    for (let option of reveiwers.options) {\n      if (option.selected) {\n        reviewersArray.push(option.value);\n      }\n    }\n    let moduleData = {\n      code: newModuleCode,\n      title: moduleName,\n      school: school,\n      reviewers: reviewersArray,\n      firstReviewer: firstReviewer,\n      questions: allQuestions\n    };\n    if (editForm) {\n      fetch(\"/api/update-module\", {\n        method: 'POST',\n        body: JSON.stringify({\n          data: moduleData\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        if (data === \"VALID\") {\n          sessionStorage.setItem(\"EditForm\", false);\n          navigate(\"/staff-home-page\");\n        }\n      });\n    } else {\n      fetch(\"/api/create-new-module\", {\n        method: 'POST',\n        body: JSON.stringify({\n          data: moduleData\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        if (data === \"VALID\") {\n          navigate(\"/staff-home-page\");\n        }\n      });\n    }\n  }\n  function DisplayPageHeader() {\n    if (editForm) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Editing form for \", newModuleCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Creating new form for \", newModuleCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"new-module-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayPageHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Module Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newModuleTitle\",\n        placeholder: \"NAME\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"School: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newModuleSchool\",\n        placeholder: \"SCHOOL\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Import questions from another module:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"importModule\",\n        name: \"importModule\",\n        children: /*#__PURE__*/_jsxDEV(ModuleSelection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: ImportQuestions,\n        children: \"Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayQuestions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayQuestionConstrcutor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select all staff that will recieve the request.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"reviewers\",\n        name: \"reviewers\",\n        size: \"2\",\n        multiple: true,\n        children: /*#__PURE__*/_jsxDEV(StaffSelection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select staff the review should reach first (optional).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"firstStaff\",\n        name: \"firstStaff\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StaffSelection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: CreateForm,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 12\n  }, this);\n}\n_s(CreateNewModulePage, \"IlEsM+ugDuorGlFgKqr5i81AnSY=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateNewModulePage;\nvar _c;\n$RefreshReg$(_c, \"CreateNewModulePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","CreateNewModulePage","_s","navigate","newModuleCode","setNewModuleCode","editForm","setEditForm","allStaff","setAllStaff","allModules","setAllModules","allQuestions","setAllQuestions","creating","setCreating","currentType","setCurrentType","currentID","setCurrentID","currentOptions","setCurrentOptions","currentQuestion","setCurrentQuestion","sessionStorage","getItem","fetch","method","body","JSON","stringify","data","headers","then","response","json","setItem","document","getElementById","value","name","school","parse","requestData","length","StaffSelection","rows","staff","push","staffID","children","fileName","_jsxFileName","lineNumber","columnNumber","DisplayQuestionConstrcutor","id","type","onClick","StartQuestion","placeholder","required","addTextBoxQuestion","SetQuestion","DisplayQuestionOptions","AddOption","AddSelectionQuestion","console","log","alert","question","options","prevArray","newOption","option","DeleteOption","newQuestion","toDelete","filter","item","DisplayQuestions","RemoveQuestion","MoveQuestion","join","ModuleSelection","module","moduleCode","deleteID","deleted","deleteIndex","i","newQuestions","move","replacement","Array","from","questionType","ImportQuestions","moduleSelected","CreateForm","reveiwers","moduleName","firstReviewer","reviewersArray","selected","moduleData","code","title","reviewers","questions","DisplayPageHeader","classname","size","multiple","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/NewModulePage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n//import './style.css';\n\n\n\nexport default function CreateNewModulePage() {\n    const navigate = useNavigate();\n    const [newModuleCode, setNewModuleCode] = useState([]);\n    const [editForm, setEditForm] = useState([]);\n    const [allStaff, setAllStaff] = useState([]);\n    const [allModules, setAllModules] = useState([]);\n    const [allQuestions, setAllQuestions] = useState([]);\n    const [creating, setCreating] = useState([]);\n    const [currentType, setCurrentType] = useState([]);\n    const [currentID, setCurrentID] = useState([]);\n    const [currentOptions, setCurrentOptions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState([]);\n\n    useEffect(() => {\n        setEditForm(sessionStorage.getItem(\"EditForm\"));      \n        if (sessionStorage.getItem(\"EditForm\")) {\n            fetch(\"/api/get-edit-module-data\", {\n                method: 'POST',\n                body: JSON.stringify({data: [sessionStorage.getItem(\"NewModuleCode\")]}),\n                headers: {\n                    'Content-Type': 'application/json'\n                  }\n            })\n            .then(response => response.json())\n            .then(data => {\n                 if (data === \"EMPTY\") {\n                    sessionStorage.setItem(\"EditForm\", false);\n                 }\n                 else {\n                    document.getElementById(\"newModuleTitle\").value = data.name;\n                    document.getElementById(\"newModuleSchool\").value = data.school;\n                    setAllQuestions(JSON.parse(data.requestData));\n                    setCurrentID(JSON.parse(data.requestData).length);\n                 }\n                \n            })\n            \n            document.getElementById(\"newModuleTitle\").value = sessionStorage.getItem(\"NewModuleCode\");\n        }\n\n\n        setCurrentID(0);\n        setNewModuleCode(sessionStorage.getItem(\"NewModuleCode\"));      \n        setCreating(false);\n        fetch(\"/api/get-all-staff\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            setAllStaff(data);\n        })\n\n        fetch(\"/api/get-all-modules\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            setAllModules(data);\n        })\n\n    }, []);\n\n    function StaffSelection() {\n        let rows =[];\n        for (let staff of allStaff) {\n            rows.push(\n                <option value={staff.staffID}>{staff.staffID}</option>\n            )\n        }\n        return rows;\n    }\n\n    function DisplayQuestionConstrcutor() {\n        let rows = [];\n\n        if (!creating) {\n            rows.push(<p>Add Question: </p>);\n            rows.push(<select id=\"newQuestion\" name=\"newQuestion\">\n            <option value=\"multiChoice\">Multiple choice</option>\n            <option value=\"multiChoiceVarious\">Multiple selection</option>\n            <option value=\"textBox\">Text box</option>\n            </select>);\n            rows.push(<button type=\"button\" id=\"button\" onClick={StartQuestion}>Start</button>);\n            return rows;\n        }\n        else if (currentType === \"textBox\") {\n            rows.push(<p>Enter the question: </p>);\n            rows.push(<input type=\"text\" id =\"question\" placeholder=\"QUESTION\" required/>);\n            rows.push(<button type=\"button\" id=\"button\" onClick={addTextBoxQuestion}>Add</button>);\n            return rows;\n        }\n        else if (currentType === \"multiChoice\" || currentType === \"multiChoiceVarious\") {\n            if (currentQuestion.length === 0) {\n                rows.push(<p>Enter the question: </p>);\n                rows.push(<input type=\"text\" id =\"question\" placeholder=\"QUESTION\" required/>);\n                rows.push(<button type=\"button\" id=\"button\" onClick={SetQuestion}>Set</button>);\n            }\n            else {\n                rows.push(\n                    <div>\n                        <div>{currentQuestion}</div>\n                        <DisplayQuestionOptions/>\n                        <input type=\"text\" id =\"questionOption\" placeholder=\"OPTION\" required/>\n                        <button type=\"button\" id=\"button\" onClick={AddOption}>Add</button>\n                        <br></br>\n                        <button type=\"button\" id=\"button\" onClick={AddSelectionQuestion}>Finish</button>\n                    </div>\n                )\n            }\n           \n\n            return rows;\n        }\n    }\n\n    function AddSelectionQuestion() {\n        console.log(currentID);\n        if (currentOptions.length < 2) {\n            alert(\"A multiple choice question must have at least two options.\")\n        }\n        else {\n            let data = {\n                id: currentID,\n                type: currentType,\n                question: currentQuestion,\n                options: currentOptions\n            }\n            setAllQuestions(prevArray => [...prevArray, data]);\n            setCreating(false);\n            setCurrentID(currentID + 1);\n            setCurrentOptions(\"\");\n            setCurrentQuestion(\"\");\n        }\n\n    }\n\n    function SetQuestion() {\n        let question = document.getElementById(\"question\").value;\n        setCurrentQuestion(question);\n    }\n\n    function AddOption() {\n        let newOption = document.getElementById(\"questionOption\").value;\n        if (newOption === \"\") {\n            alert(\"The option is empty.\");\n        }\n        else {\n           setCurrentOptions(prevArray => [...prevArray, newOption]); \n        }\n        \n    }\n\n    function DisplayQuestionOptions() {\n        let rows = [];\n        for (let option of currentOptions) {\n            rows.push(\n            <div>\n                {option}\n                <button type=\"button\" id=\"button\" onClick={() => DeleteOption(option)}>DELETE</button>\n            </div>);\n        }\n        rows.push(<br></br>);\n        return rows;\n    }\n    function addTextBoxQuestion() {\n        console.log(currentID);\n        let newQuestion = document.getElementById(\"question\").value;\n        \n        let data = {\n                    id: currentID,\n                    type: 'textBox',\n                    question: newQuestion,\n                }\n        setAllQuestions(prevArray => [...prevArray, data]);\n        setCreating(false);\n        setCurrentID(currentID + 1);\n    }\n\n    function DeleteOption(toDelete) {\n        setCurrentOptions(currentOptions.filter(item => item !== toDelete));\n    }\n\n    function DisplayQuestions() {\n        if (allQuestions.length === 0 || allQuestions === null) {\n            return;\n        }\n        let rows = [];\n        for (let currentQuestion of allQuestions) {\n            if (currentQuestion.type === \"textBox\") {\n                rows.push(<div>Text Box Question</div>);\n                rows.push(<div>Question: {currentQuestion.question}</div>);\n                rows.push(<button type=\"button\" id=\"button\" onClick={() => RemoveQuestion(currentQuestion.id)}>DELETE</button>);\n                rows.push(<button type=\"button\" id=\"button\" onClick={() => MoveQuestion(currentQuestion.id, -1)}>DOWN</button>)\n                rows.push(<button type=\"button\" id=\"button\" onClick={() => MoveQuestion(currentQuestion.id, 1)}>UP</button>);\n            }\n            else if (currentQuestion.type === \"multiChoice\" || currentQuestion.type === \"multiChoiceVarious\") {\n                rows.push(\n                <div>\n                    <div>Text Box Question</div>\n                    <div>Question: {currentQuestion.question}</div>\n                    <div>Options: {currentQuestion.options.join(' | ')}</div>\n                    <button type=\"button\" id=\"button\" onClick={() => RemoveQuestion(currentQuestion.id)}>DELETE</button>\n                    <button type=\"button\" id=\"button\" onClick={() => MoveQuestion(currentQuestion.id, -1)}>DOWN</button>\n                    <button type=\"button\" id=\"button\" onClick={() => MoveQuestion(currentQuestion.id, 1)}>UP</button>\n                </div>\n                )\n\n            }\n        }\n        return rows;\n    }\n\n    function ModuleSelection() {\n        let rows = [];\n        rows.push(<option value=\"\">Select</option>);\n        for (let module of allModules) {\n            rows.push(<option value={module.moduleCode}>{module.moduleCode}</option>);\n        }\n\n        return rows;\n    }\n\n    function RemoveQuestion(deleteID) {\n        let deleted = false;\n        let deleteIndex = 0;\n        for (let i = 0; i < allQuestions.length; i++) {\n            if (deleted) {\n                allQuestions[i].id = i - 1;\n            }\n            if (allQuestions[i].id == deleteID && !deleted) {\n                deleteIndex = i;\n                deleted = true;\n            }\n        }\n        let newQuestions = [];\n        for (let i = 0; i < allQuestions.length; i++) {\n            if (i !== deleteIndex) {\n                newQuestions.push(allQuestions[i]);\n            }\n        }\n        setAllQuestions(newQuestions);\n    }\n\n    function MoveQuestion(id, move) {\n        let replacement = allQuestions[0];\n        let placeholder = Array.from(allQuestions);\n        for (let i = 0; i < allQuestions.length; i++) {\n            if ((move > 0 && allQuestions[i].id === id && i != 0) || (move < 0 && allQuestions[i].id === id && i != allQuestions.length - 1)) {\n                replacement = placeholder[i - move];\n                placeholder[i - move] = placeholder[i];\n                placeholder[i] = replacement;\n            }\n        }\n        setAllQuestions(placeholder);\n    }\n\n    function StartQuestion() {\n        let questionType = document.getElementById(\"newQuestion\").value;\n        setCurrentType(questionType);\n        setCreating(true);\n    }\n\n    function ImportQuestions() {\n        let moduleSelected = document.getElementById(\"importModule\").value;\n\n        fetch(\"/api/get-module-questions\", {\n            method: 'POST',\n            body: JSON.stringify({data: [moduleSelected]}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (JSON.parse(data[0].requestData) !== null) {\n                setAllQuestions(JSON.parse(data[0].requestData));\n            }\n        })\n    }\n\n    function CreateForm() {\n        let reveiwers = document.getElementById(\"reviewers\");\n        let moduleName = document.getElementById(\"newModuleTitle\").value;\n        let school = document.getElementById(\"newModuleSchool\").value;\n        let firstReviewer = document.getElementById(\"firstStaff\").value;\n        let reviewersArray = [];\n        for (let option of reveiwers.options) {\n            if (option.selected) {\n                reviewersArray.push(option.value);\n            }\n        }\n\n        let moduleData = {\n            code: newModuleCode,\n            title: moduleName,\n            school: school,\n            reviewers: reviewersArray,\n            firstReviewer: firstReviewer,\n            questions: allQuestions\n        };\n        if (editForm) {\n           fetch(\"/api/update-module\", {\n            method: 'POST',\n            body: JSON.stringify({data: moduleData}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data === \"VALID\") {\n                    sessionStorage.setItem(\"EditForm\", false);\n\n                    navigate(\"/staff-home-page\");\n                }\n            });\n        }\n        else {\n            fetch(\"/api/create-new-module\", {\n                method: 'POST',\n                body: JSON.stringify({data: moduleData}),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n            if (data === \"VALID\") {\n                navigate(\"/staff-home-page\");\n            }\n            })\n        }\n    }\n\n    function DisplayPageHeader() {\n        if (editForm) {\n            return <h1>Editing form for {newModuleCode}</h1>;\n        }\n        else {\n            return <h1>Creating new form for {newModuleCode}</h1>;\n        }\n    }\n\n    return <div classname=\"new-module-page\">\n        <div>\n            <DisplayPageHeader/>\n            <p>Module Title: </p>\n            <input type=\"text\" id =\"newModuleTitle\" placeholder=\"NAME\" required/>\n            <p>School: </p>\n            <input type=\"text\" id =\"newModuleSchool\" placeholder=\"SCHOOL\" required/>\n            <br></br>\n            <p>Import questions from another module:</p>\n            <select id=\"importModule\" name=\"importModule\">\n                <ModuleSelection/>\n            </select>\n            <button type=\"button\" id=\"button\" onClick={ImportQuestions}>Import</button>\n            <br></br>\n\n            <DisplayQuestions/>\n            <DisplayQuestionConstrcutor/>\n            <br></br>\n            <p>Select all staff that will recieve the request.</p>\n            <select id=\"reviewers\" name=\"reviewers\" size=\"2\" multiple>\n                <StaffSelection/>\n            </select>\n            <br></br>\n            <p>Select staff the review should reach first (optional).</p>\n            <select id=\"firstStaff\" name=\"firstStaff\">\n                <option value=\"\">Select</option>\n                <StaffSelection/>\n            </select>\n            <br></br>\n            <button type=\"button\" id=\"button\" onClick={CreateForm}>Submit</button>\n        </div>\n    </div>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}