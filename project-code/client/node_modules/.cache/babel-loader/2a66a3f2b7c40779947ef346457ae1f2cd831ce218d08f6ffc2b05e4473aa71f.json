{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/StudentHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentHistory() {\n  _s();\n  const navigate = useNavigate();\n  const [studentID, setStudentID] = useState([]);\n  const [requestData, setRequestData] = useState([]);\n  const [loginType, setLoginType] = useState([]);\n  useEffect(() => {\n    setLoginType(sessionStorage.getItem(\"LoginType\"));\n    setStudentID(sessionStorage.getItem(\"studentID\"));\n    fetch(\"/api/get-student-history\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        data: sessionStorage.getItem(\"studentID\")\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setRequestData(data);\n    }).catch(error => console.error(error));\n  }, []);\n  function DisplayRequests() {\n    let rows = [];\n    for (let request of requestData) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Module: \", request.moduleCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, this));\n      let dateTime = JSON.parse(request.answers).dateTime;\n      console.log(dateTime);\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Made on \", dateTime.day, \"/\", dateTime.month, \"/\", dateTime.year, \" at \", dateTime.hour, \":\", dateTime.minutes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }, this));\n      let requestQuestions = JSON.parse(request.answers).questions;\n      let requestAnswers = JSON.parse(request.answers).answers;\n      rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Question | Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }, this));\n      for (let i = 0; i < requestQuestions.length; i++) {\n        if (typeof requestAnswers[i] === \"object\") {\n          const answerString = requestAnswers[i].join(' | ');\n          rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [requestQuestions[i], \" : \", answerString]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 31\n          }, this));\n        } else {\n          rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [requestQuestions[i], \" : \", requestAnswers[i]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 31\n          }, this));\n        }\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Status: \", request.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this));\n    }\n    return rows;\n  }\n  function DisplayAnalysis() {\n    if (loginType === \"Student\") {\n      return;\n    }\n    let rows = [];\n    rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [requestData.length, \" requests made in total.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this));\n    console.log(requestData.length);\n    for (let request of requestData) {\n      let dateTime = JSON.parse(request.answers).dateTime;\n      let constructedDate = dateTime.year + \"-\" + dateTime.month + \"-\" + dateTime.day;\n      console.log(constructedDate);\n      const currentDate = new Date();\n      const timeDifference = currentDate - constructedDate;\n      console(timeDifference);\n    }\n    return rows;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-history-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Request history for \", studentID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayAnalysis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayRequests, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n}\n_s(StudentHistory, \"ht06kxrWecozTHukEfPFBw9lBbc=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentHistory;\nvar _c;\n$RefreshReg$(_c, \"StudentHistory\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","StudentHistory","_s","navigate","studentID","setStudentID","requestData","setRequestData","loginType","setLoginType","sessionStorage","getItem","fetch","method","body","JSON","stringify","data","headers","then","response","json","catch","error","console","DisplayRequests","rows","request","push","children","moduleCode","fileName","_jsxFileName","lineNumber","columnNumber","dateTime","parse","answers","log","day","month","year","hour","minutes","requestQuestions","questions","requestAnswers","i","length","answerString","join","status","DisplayAnalysis","constructedDate","currentDate","Date","timeDifference","className","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/StudentHistory.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n\nexport default function StudentHistory() {\n    const navigate = useNavigate();\n    const [studentID, setStudentID] = useState([]);\n    const [requestData, setRequestData] = useState([]);\n    const [loginType, setLoginType] = useState([]);\n    \n    useEffect(() => {\n        setLoginType(sessionStorage.getItem(\"LoginType\"));\n        setStudentID(sessionStorage.getItem(\"studentID\"));\n\n        fetch(\"/api/get-student-history\", {\n            method: \"POST\",\n            body: JSON.stringify({data: sessionStorage.getItem(\"studentID\")}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            setRequestData(data);\n        })\n        .catch(error => console.error(error))\n    }, []);\n\n\n    function DisplayRequests() {\n        let rows = [];\n        for (let request of requestData) {\n            rows.push(<div>Module: {request.moduleCode}</div>)\n            let dateTime = JSON.parse(request.answers).dateTime;\n            console.log(dateTime);\n            rows.push(<div>Made on {dateTime.day}/{dateTime.month}/{dateTime.year} at {dateTime.hour}:{dateTime.minutes}</div>)\n            let requestQuestions = JSON.parse(request.answers).questions;\n            let requestAnswers = JSON.parse(request.answers).answers;\n            rows.push(<br></br>);\n            rows.push(<div>Question | Answer</div>)\n            for (let i = 0; i <requestQuestions.length; i++) {\n                if (typeof requestAnswers[i] === \"object\") {\n                    const answerString = requestAnswers[i].join(' | ');\n                    rows.push(<div>{requestQuestions[i]} : {answerString}</div>)\n                }\n                else {\n                    rows.push(<div>{requestQuestions[i]} : {requestAnswers[i]}</div>)\n                }\n            }\n\n            rows.push(<br></br>);\n            rows.push(<div>Status: {request.status}</div>)\n            rows.push(<br></br>);\n        }\n        return rows;\n    }\n\n    function DisplayAnalysis() {\n        if (loginType === \"Student\") {\n            return;\n        }\n        let rows = [];\n        rows.push(<div>{requestData.length} requests made in total.</div>);\n        console.log(requestData.length);\n        for (let request of requestData) {\n            let dateTime = JSON.parse(request.answers).dateTime;\n            let constructedDate = dateTime.year + \"-\" + dateTime.month + \"-\" + dateTime.day;\n            console.log(constructedDate);\n            const currentDate = new Date();\n            const timeDifference = currentDate - constructedDate;\n            console(timeDifference);\n        }\n        return rows;\n    }\n\n    return <div className = \"student-history-page\">\n        <div>\n            <h1>Request history for {studentID}</h1>\n            <DisplayAnalysis/>\n            <DisplayRequests/>\n        </div>\n        \n        \n    </div>\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}