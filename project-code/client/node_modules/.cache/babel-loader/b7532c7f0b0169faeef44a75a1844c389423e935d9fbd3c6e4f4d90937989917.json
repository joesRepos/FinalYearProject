{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/StaffHomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n// The Staff Home page.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoomPage() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState([]);\n  const [loginType, setLoginType] = useState([]);\n  const [name, setName] = useState([]);\n  const [modules, setModules] = useState([]);\n\n  // Upon loading gts all the data from the session and the backend.\n  useEffect(() => {\n    sessionStorage.setItem(\"EditForm\", false);\n    setUsername(sessionStorage.getItem(\"Username\"));\n    setLoginType(sessionStorage.getItem(\"LoginType\"));\n    // Gets the name of the staff memeber.\n    fetch(\"/api/get-name\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: [sessionStorage.getItem(\"Username\"), sessionStorage.getItem(\"LoginType\")]\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (data === \"INVALID\") {\n        alert(\"Access Denied.\");\n      } else {\n        setName(data);\n      }\n    }).catch(error => console.error(error));\n    // Gets all the modules the staff can review and edit.\n    fetch(\"/api/get-staff-review-modules\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: [sessionStorage.getItem(\"Username\"), sessionStorage.getItem(\"LoginType\")]\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (data === \"INVALID\") {\n        alert(\"Access Denied.\");\n      } else {\n        setModules(data);\n      }\n    }).catch(error => console.error(error));\n  }, []);\n\n  // Naviagtes to the Review Requests page.\n  function ReviewRequests() {\n    navigate(\"/staff-decision-page\");\n  }\n\n  // Navigates to the Decision History page.\n  function ViewHistory() {\n    navigate(\"/decision-history-page\");\n  }\n\n  // Searches for a student and naviagates to their history page.\n  function SearchStudentHistory() {\n    let studentID = document.getElementById(\"usernameEnter\").value;\n    if (studentID === \"\") {\n      return;\n    }\n    sessionStorage.setItem(\"studentRequest\", false);\n    sessionStorage.setItem(\"studentID\", studentID);\n    navigate(\"/student-history-page\");\n  }\n\n  // Navigates to the Create New Form page if the module code entered is unique.\n  function CreateNewModule() {\n    let moduleCode = document.getElementById(\"newModuleEnter\").value;\n    if (moduleCode === \"\") {\n      return;\n    }\n    fetch(\"/api/module-not-exist\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: moduleCode\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (data === \"VALID\") {\n        sessionStorage.setItem(\"NewModuleCode\", moduleCode);\n        navigate(\"/new-module-page\");\n      } else if (data === \"INVALID\") {\n        alert(\"Sorry, that module already exists.\");\n      }\n    });\n  }\n\n  // Navigates to the Edit Form page of the entered module.\n  function EditModule() {\n    let moduleCode = document.getElementById(\"moduleSelected\").value;\n    sessionStorage.setItem(\"NewModuleCode\", moduleCode);\n    sessionStorage.setItem(\"EditForm\", true);\n    navigate(\"/edit-module-page\");\n  }\n\n  // Displays the drop down of module options.\n  function ModuleOptions() {\n    let rows = [];\n    for (let module of modules) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: module.moduleCode,\n        children: module.moduleCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this));\n    }\n    return rows;\n  }\n\n  // The HTML.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"staff-home-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"You are signed in as \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: ReviewRequests,\n        children: \"Review Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: ViewHistory,\n        children: \"Decision History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Search Student History: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"usernameEnter\",\n        placeholder: \"Student ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: SearchStudentHistory,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create a new module request form: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newModuleEnter\",\n        placeholder: \"Module Code\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: CreateNewModule,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Edit existing module request form: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"moduleSelected\",\n        children: /*#__PURE__*/_jsxDEV(ModuleOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: EditModule,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 8\n  }, this);\n}\n_s(RoomPage, \"luAx2dnN5M6S7lt3mHa8esFg0Lg=\", false, function () {\n  return [useNavigate];\n});\n_c = RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","RoomPage","_s","navigate","username","setUsername","loginType","setLoginType","name","setName","modules","setModules","sessionStorage","setItem","getItem","fetch","method","body","JSON","stringify","data","headers","then","response","json","alert","catch","error","console","ReviewRequests","ViewHistory","SearchStudentHistory","studentID","document","getElementById","value","CreateNewModule","moduleCode","EditModule","ModuleOptions","rows","module","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","onClick","placeholder","required","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/StaffHomePage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n\n\n// The Staff Home page.\nexport default function RoomPage() {\n    const navigate = useNavigate();\n\n    const [username, setUsername] = useState([]);\n    const [loginType, setLoginType] = useState([]);\n    const [name, setName] = useState([]);\n    const [modules, setModules] = useState([]);\n\n    // Upon loading gts all the data from the session and the backend.\n    useEffect(() => {\n        sessionStorage.setItem(\"EditForm\", false);\n        setUsername(sessionStorage.getItem(\"Username\"));\n        setLoginType(sessionStorage.getItem(\"LoginType\"));\n        // Gets the name of the staff memeber.\n        fetch(\"/api/get-name\", {\n            method: 'POST',\n            body: JSON.stringify({data: [sessionStorage.getItem(\"Username\"), sessionStorage.getItem(\"LoginType\")]}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data === \"INVALID\") {\n                alert(\"Access Denied.\");\n            }\n            else {\n                setName(data);\n            }\n        })\n        .catch(error => console.error(error))\n        // Gets all the modules the staff can review and edit.\n        fetch(\"/api/get-staff-review-modules\", {\n            method: 'POST',\n            body: JSON.stringify({data: [sessionStorage.getItem(\"Username\"), sessionStorage.getItem(\"LoginType\")]}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data === \"INVALID\") {\n                alert(\"Access Denied.\");\n            }\n            else {\n                setModules(data);\n            }\n        })\n        .catch(error => console.error(error))\n    }, []);\n\n    // Naviagtes to the Review Requests page.\n    function ReviewRequests() {\n        navigate(\"/staff-decision-page\");\n    }\n\n    // Navigates to the Decision History page.\n    function ViewHistory() {\n        navigate(\"/decision-history-page\");\n    }\n\n    // Searches for a student and naviagates to their history page.\n    function SearchStudentHistory() {\n        let studentID = document.getElementById(\"usernameEnter\").value;\n        if (studentID === \"\") {\n            return;\n        }\n        sessionStorage.setItem(\"studentRequest\", false);\n        sessionStorage.setItem(\"studentID\", studentID);\n        navigate(\"/student-history-page\");\n    }\n\n    // Navigates to the Create New Form page if the module code entered is unique.\n    function CreateNewModule() {\n        let moduleCode = document.getElementById(\"newModuleEnter\").value;\n        if (moduleCode === \"\") {\n            return;\n        }\n        fetch(\"/api/module-not-exist\", {\n            method: 'POST',\n            body: JSON.stringify({data: moduleCode}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data === \"VALID\") {\n                sessionStorage.setItem(\"NewModuleCode\", moduleCode);\n                navigate(\"/new-module-page\");\n            }\n            else if (data === \"INVALID\") {\n                alert(\"Sorry, that module already exists.\")\n            }\n        });\n    }\n\n    // Navigates to the Edit Form page of the entered module.\n    function EditModule() {\n        let moduleCode = document.getElementById(\"moduleSelected\").value;\n        sessionStorage.setItem(\"NewModuleCode\", moduleCode);\n        sessionStorage.setItem(\"EditForm\", true);\n\n        navigate(\"/edit-module-page\");\n    }\n\n    // Displays the drop down of module options.\n    function ModuleOptions() {\n        let rows = [];\n        for (let module of modules) {\n            rows.push(\n                <option value={module.moduleCode}>{module.moduleCode}</option>\n            );\n        }\n        return rows;\n    }\n\n\n// The HTML.\nreturn <div className=\"staff-home-page\">\n<div>\n    <h1>You are signed in as {name}</h1>\n    <button type=\"button\" id=\"button\" onClick={ReviewRequests} >Review Requests</button> \n    <p></p>\n    <button type=\"button\" id=\"button\" onClick={ViewHistory} >Decision History</button> \n\n    <p>Search Student History: </p>\n    <input type=\"text\" id =\"usernameEnter\" placeholder=\"Student ID\" required/>\n    <button type=\"button\" id=\"button\" onClick={SearchStudentHistory}>Search</button>\n\n    <p>Create a new module request form: </p>\n    <input type=\"text\" id =\"newModuleEnter\" placeholder=\"Module Code\" required/>\n    <button type=\"button\" id=\"button\" onClick={CreateNewModule}>Start</button>\n\n    <p>Edit existing module request form: </p>\n    <select id=\"moduleSelected\">\n        <ModuleOptions/>\n    </select>\n    <button type=\"button\" id=\"button\" onClick={EditModule}>Start</button>\n</div>\n\n</div>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}