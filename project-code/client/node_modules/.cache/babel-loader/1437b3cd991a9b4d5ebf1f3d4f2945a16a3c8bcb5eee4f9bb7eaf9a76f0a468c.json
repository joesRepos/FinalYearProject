{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/StudentHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n// The Student History/ Request History page.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudentHistory() {\n  _s();\n  const navigate = useNavigate();\n  const [studentID, setStudentID] = useState([]);\n  const [requestData, setRequestData] = useState([]);\n  const [loginType, setLoginType] = useState([]);\n\n  // Upon loading, fetches all the data from the backend and the session storage.\n  useEffect(() => {\n    setLoginType(sessionStorage.getItem(\"LoginType\"));\n    if (sessionStorage.getItem(\"LoginType\") === \"Staff\" && window.location.href.substring(window.location.href.lastIndexOf('/') + 1) !== \"student-history-page\") {\n      setStudentID(window.location.href.substring(window.location.href.lastIndexOf('/') + 1));\n    } else {\n      setStudentID(sessionStorage.getItem(\"studentID\"));\n    }\n    // Gets all the previously made requests by the student.\n    fetch(\"/api/get-student-history\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        data: sessionStorage.getItem(\"studentID\")\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setRequestData(data);\n    }).catch(error => console.error(error));\n  }, []);\n\n  // Displays the requests one after the other.\n  function DisplayRequests() {\n    let rows = [];\n    if (requestData.length < 1) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"There are no requests to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this));\n    }\n    for (let request of requestData) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Module: \", request.moduleCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }, this));\n      let dateTime = JSON.parse(request.answers).dateTime;\n      rows.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Made on \", dateTime.day, \"/\", dateTime.month, \"/\", dateTime.year, \" at \", dateTime.hour, \":\", dateTime.minutes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this));\n      let requestQuestions = JSON.parse(request.answers).questions;\n      let requestAnswers = JSON.parse(request.answers).answers;\n      rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }, this));\n      let questionTable = [];\n      questionTable.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this));\n      for (let i = 0; i < requestQuestions.length; i++) {\n        if (typeof requestAnswers[i] === \"object\") {\n          const answerString = requestAnswers[i].join(' | ');\n          questionTable.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: requestQuestions[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: answerString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this));\n        } else {\n          questionTable.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: requestQuestions[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: requestAnswers[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this));\n        }\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"table\", {\n        children: questionTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", request.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }, this));\n      rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }, this));\n    }\n    return rows;\n  }\n\n  // Displays the analysis of the frequency of requests only to staff.\n  function DisplayAnalysis() {\n    if (loginType === \"Student\" && requestData.length < 1) {\n      return;\n    }\n    let rows = [];\n    rows.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [requestData.length, \" request(s) made in total.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }, this));\n    let total = 0;\n    for (let request of requestData) {\n      let dateTime = JSON.parse(request.answers).dateTime;\n      let constructedDate = new Date(dateTime.year + \"-\" + dateTime.month + \"-\" + dateTime.day);\n      const currentDate = new Date();\n      const timeDifference = currentDate - constructedDate;\n      const daysDifference = timeDifference / (1000 * 60 * 60 * 24);\n      if (daysDifference <= 30) {\n        total++;\n      }\n    }\n    rows.push( /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [total, \" request(s) made in the past month (30 days).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this));\n    rows.push( /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }, this));\n    return rows;\n  }\n\n  // The HTML.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-history-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Request history for \", studentID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayAnalysis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayRequests, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 12\n  }, this);\n}\n_s(StudentHistory, \"ht06kxrWecozTHukEfPFBw9lBbc=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentHistory;\nvar _c;\n$RefreshReg$(_c, \"StudentHistory\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","StudentHistory","_s","navigate","studentID","setStudentID","requestData","setRequestData","loginType","setLoginType","sessionStorage","getItem","window","location","href","substring","lastIndexOf","fetch","method","body","JSON","stringify","data","headers","then","response","json","catch","error","console","DisplayRequests","rows","length","push","children","fileName","_jsxFileName","lineNumber","columnNumber","request","moduleCode","dateTime","parse","answers","day","month","year","hour","minutes","requestQuestions","questions","requestAnswers","questionTable","i","answerString","join","status","DisplayAnalysis","total","constructedDate","Date","currentDate","timeDifference","daysDifference","className","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/StudentHistory.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n// The Student History/ Request History page.\nexport default function StudentHistory() {\n    const navigate = useNavigate();\n    const [studentID, setStudentID] = useState([]);\n    const [requestData, setRequestData] = useState([]);\n    const [loginType, setLoginType] = useState([]);\n    \n    // Upon loading, fetches all the data from the backend and the session storage.\n    useEffect(() => {\n        setLoginType(sessionStorage.getItem(\"LoginType\"));\n        if (sessionStorage.getItem(\"LoginType\") === \"Staff\" && window.location.href.substring(window.location.href.lastIndexOf('/') + 1) !== \"student-history-page\") {\n            setStudentID(window.location.href.substring(window.location.href.lastIndexOf('/') + 1));\n        }\n        else {\n            setStudentID(sessionStorage.getItem(\"studentID\"));\n        }\n        // Gets all the previously made requests by the student.\n        fetch(\"/api/get-student-history\", {\n            method: \"POST\",\n            body: JSON.stringify({data: sessionStorage.getItem(\"studentID\")}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            setRequestData(data);\n        })\n        .catch(error => console.error(error))\n    }, []);\n\n    // Displays the requests one after the other.\n    function DisplayRequests() {\n        let rows = [];\n        if (requestData.length < 1) {\n            rows.push(<h2>There are no requests to display.</h2>);\n        }\n        for (let request of requestData) {\n            rows.push(<p>Module: {request.moduleCode}</p>)\n            let dateTime = JSON.parse(request.answers).dateTime;\n            rows.push(<p>Made on {dateTime.day}/{dateTime.month}/{dateTime.year} at {dateTime.hour}:{dateTime.minutes}</p>)\n            let requestQuestions = JSON.parse(request.answers).questions;\n            let requestAnswers = JSON.parse(request.answers).answers;\n            rows.push(<br></br>);\n            let questionTable = [];\n            questionTable.push(\n                <tr>\n                    <th>Question</th>\n                    <th>Answer</th>\n                </tr>\n            )\n            for (let i = 0; i <requestQuestions.length; i++) {\n                if (typeof requestAnswers[i] === \"object\") {\n                    const answerString = requestAnswers[i].join(' | ');\n                    questionTable.push(\n                        <tr key={i}>\n                            <td>{requestQuestions[i]}</td>\n                            <td>{answerString}</td>\n                        </tr>\n                    )                }\n                else {\n                    questionTable.push(\n                        <tr key={i}>\n                            <td>{requestQuestions[i]}</td>\n                            <td>{requestAnswers[i]}</td>\n                        </tr>\n                    )\n                }\n            }\n            rows.push(\n                <table>\n                    {questionTable}\n                </table>\n            )\n            rows.push(<br></br>);\n            rows.push(<p>Status: {request.status}</p>)\n            rows.push(<br></br>);\n        }\n        return rows;\n    }\n\n    // Displays the analysis of the frequency of requests only to staff.\n    function DisplayAnalysis() {\n        if (loginType === \"Student\" && requestData.length < 1) {\n            return;\n        }\n        let rows = [];\n        rows.push(<h2>{requestData.length} request(s) made in total.</h2>);\n        let total = 0;\n        for (let request of requestData) {\n            let dateTime = JSON.parse(request.answers).dateTime;\n            let constructedDate = new Date(dateTime.year + \"-\" + dateTime.month + \"-\" + dateTime.day);\n            const currentDate = new Date();\n            const timeDifference = currentDate - constructedDate;\n            const daysDifference = timeDifference / (1000 * 60 * 60 * 24);\n\n            if (daysDifference <= 30) {\n                total++;\n            }\n        }\n        rows.push(<h2>{total} request(s) made in the past month (30 days).</h2>);\n        rows.push(<br></br>);\n        return rows;\n    }\n\n    // The HTML.\n    return <div className = \"student-history-page\">\n        <div>\n            <h1>Request history for {studentID}</h1>\n            <DisplayAnalysis/>\n            <DisplayRequests/>\n        </div>\n        \n        \n    </div>\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}