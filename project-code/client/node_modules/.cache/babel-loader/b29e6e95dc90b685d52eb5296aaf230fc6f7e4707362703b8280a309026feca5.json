{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  function checkDetails() {\n    let username = document.getElementById(\"usernameEnter\").value;\n    let loginType = document.getElementById(\"loginTypeSelect\").value;\n    if (username.split(\"@\")[1] === \"st-andrews.ac.uk\") {\n      fetch(\"/api/check-login-detail\", {\n        method: 'POST',\n        body: JSON.stringify({\n          data: [username, loginType]\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        if (data === \"VALID\") {\n          sessionStorage.setItem(\"Username\", username);\n          sessionStorage.setItem(\"LoginType\", loginType);\n          switch (loginType) {\n            case \"Student\":\n              navigate(\"/student-home-page\");\n              break;\n            case \"Staff\":\n              navigate(\"/staff-home-page\");\n              break;\n          }\n        } else if (data === \"INVALID\") {\n          alert(\"Invalid credentials\");\n        }\n      }).catch(error => console.error(error));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Extension Request \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 35\n        }, this), \" System Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"usernameEnter\",\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"passwordEnter\",\n        placeholder: \"Password\",\n        readonly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"loginTypeSelect\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Student\",\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Staff\",\n          children: \"Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: checkDetails,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useNavigate","React","useEffect","useState","jsxDEV","_jsxDEV","LoginPage","_s","navigate","checkDetails","username","document","getElementById","value","loginType","split","fetch","method","body","JSON","stringify","data","headers","then","response","json","sessionStorage","setItem","alert","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","required","readonly","onClick","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/LoginPage.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport React, {useEffect, useState} from 'react';\n\n\nexport default function LoginPage() {\n    const navigate = useNavigate();\n\n    function checkDetails() {\n        let username = document.getElementById(\"usernameEnter\").value;\n        let loginType = document.getElementById(\"loginTypeSelect\").value;\n\n        if (username.split(\"@\")[1] === \"st-andrews.ac.uk\") {\n            fetch(\"/api/check-login-detail\", {\n                method: 'POST',\n                body: JSON.stringify({data: [username, loginType]}),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data === \"VALID\") {\n                    sessionStorage.setItem(\"Username\", username);\n                    sessionStorage.setItem(\"LoginType\", loginType);\n                    switch (loginType) {\n                        case \"Student\":\n                            navigate(\"/student-home-page\");\n                            break;\n                        case \"Staff\": \n                            navigate(\"/staff-home-page\");\n                            break;\n                    }\n                }\n                else if (data === \"INVALID\") {\n                    alert(\"Invalid credentials\");\n                }\n            })\n            .catch(error => console.error(error))\n        }\n    }\n    return <div className=\"login-page\">\n        <div>\n            <h1>Extension Request <br></br> System Login</h1>\n            <h2></h2>\n            <p>Username: </p>\n            <input type=\"text\" id =\"usernameEnter\" placeholder=\"Username\" required/>\n            <p>Password</p>\n            <input type=\"password\" id =\"passwordEnter\" placeholder=\"Password\" readonly/>\n            <p></p>\n            <select id=\"loginTypeSelect\">\n                <option value=\"Student\">Student</option>\n                <option value=\"Staff\">Staff</option>\n            </select>\n            <button type=\"button\" id=\"button\" onClick={checkDetails}>Login</button>\n                \n        </div>\n    </div>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}