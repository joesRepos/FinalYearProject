{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatPage() {\n  _s();\n  const [chatLogs, setChatLogs] = useState([]);\n  const [loginType, setLoginType] = useState([]);\n  const [requestID, setRequestID] = useState([]);\n  useEffect(() => {\n    setLoginType(sessionStorage.getItem(\"LoginType\"));\n    setRequestID(sessionStorage.getItem(\"ChatRequestID\"));\n    fetch(\"/api/get-chat-logs\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: [sessionStorage.getItem(\"ChatRequestID\")]\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data[0]);\n      setChatLogs(data[0]);\n    }).catch(error => console.error(error));\n  }, []);\n  function DisplayPreviousChat() {\n    let rows = [];\n    if (chatLogs.chat === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Start the discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  function AddChat() {\n    let newChat = document.getElementById(\"chatEnter\").value;\n    if (chatLogs.chat === null) {\n      let chat = [];\n      chat.push(newChat);\n      console.log(chatLogs.chat);\n    } else {\n      let chat = chatLogs.chat;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conversation \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayPreviousChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"chatEnter\",\n        placeholder: \"Chat\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: AddChat,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_s(ChatPage, \"Q9L+NHn3CoDIepvAxb8HCapfwJY=\");\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ChatPage","_s","chatLogs","setChatLogs","loginType","setLoginType","requestID","setRequestID","sessionStorage","getItem","fetch","method","body","JSON","stringify","data","headers","then","response","json","console","log","catch","error","DisplayPreviousChat","rows","chat","children","fileName","_jsxFileName","lineNumber","columnNumber","AddChat","newChat","document","getElementById","value","push","type","id","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/ChatPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n\nexport default function ChatPage() {\n    const [chatLogs, setChatLogs] = useState([]);\n    const [loginType, setLoginType] = useState([]);\n    const [requestID, setRequestID] = useState([]);\n    useEffect(() => {\n        setLoginType(sessionStorage.getItem(\"LoginType\"));\n        setRequestID(sessionStorage.getItem(\"ChatRequestID\"));\n\n        fetch(\"/api/get-chat-logs\", {\n            method: 'POST',\n            body: JSON.stringify({data: [sessionStorage.getItem(\"ChatRequestID\")]}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data[0]);\n            setChatLogs(data[0]);\n        })\n        .catch(error => console.error(error))\n    }, []);\n\n    function DisplayPreviousChat() {\n        let rows = [];\n        if (chatLogs.chat === null) {\n            return <div>Start the discussion</div>\n        }\n    }\n\n    function AddChat() {\n        let newChat = document.getElementById(\"chatEnter\").value;\n        if (chatLogs.chat === null) {\n            let chat = [];\n            chat.push(newChat);\n            console.log(chatLogs.chat);\n        }\n        else {\n            let chat = chatLogs.chat;  \n        }\n    }\n    return <div>\n        <div>\n            <h1>Conversation </h1>\n            <DisplayPreviousChat/>\n            <input type=\"text\" id =\"chatEnter\" placeholder=\"Chat\" required/>\n            <button type=\"button\" id=\"button\" onClick={AddChat}>Send</button>\n        </div>\n    </div>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}