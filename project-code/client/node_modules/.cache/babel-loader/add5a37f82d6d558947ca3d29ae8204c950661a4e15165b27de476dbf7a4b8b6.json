{"ast":null,"code":"var _jsxFileName = \"/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatPage() {\n  _s();\n  const [chatLogs, setChatLogs] = useState([]);\n  const [loginType, setLoginType] = useState([]);\n  const [userID, setUserID] = useState([]);\n  const [requestID, setRequestID] = useState([]);\n  useEffect(() => {\n    setLoginType(sessionStorage.getItem(\"LoginType\"));\n    setRequestID(sessionStorage.getItem(\"ChatRequestID\"));\n    setUserID(sessionStorage.getItem(\"Username\"));\n    fetch(\"/api/get-chat-logs\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: [sessionStorage.getItem(\"ChatRequestID\")]\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data[0]);\n      setChatLogs(data[0]);\n    }).catch(error => console.error(error));\n  }, []);\n  function DisplayPreviousChat() {\n    let rows = [];\n    if (chatLogs.chat === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Start the discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    }\n    console.log(chatLogs);\n    let chats = Array.from(JSON.parse(chatLogs));\n    console.log(chatLogs);\n    for (let chat of chats) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"diV\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [chat.sender, \" on \", chat.sent.day, \"/\", chat.sent.month, \"/\", chat.sent.year, \" at \", chat.sent.hour, \":\", chat.sent.minutes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: chat.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this));\n    }\n    return rows;\n  }\n  function AddChat() {\n    var currentDate = new Date();\n    let newChat = document.getElementById(\"chatEnter\").value;\n    let dateTime = {\n      day: currentDate.getDay(),\n      month: currentDate.getMonth() + 1,\n      year: currentDate.getFullYear(),\n      hour: currentDate.getHours(),\n      minutes: currentDate.getMinutes()\n    };\n    let data = {\n      sender: userID,\n      message: newChat,\n      sent: dateTime\n    };\n    let chat = [];\n    if (chatLogs.chat === null) {\n      chat.push(data);\n    } else {\n      chat = Array.from(chatLogs);\n      chat.push(data);\n    }\n    fetch(\"/api/add-new-chat\", {\n      method: 'POST',\n      body: JSON.stringify({\n        data: [requestID, chat]\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => console.error(error));\n    setChatLogs(chat);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Conversation \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayPreviousChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"chatEnter\",\n        placeholder: \"Chat\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"button\",\n        onClick: AddChat,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 12\n  }, this);\n}\n_s(ChatPage, \"l4wmnR2jwIyWrXkx2eWa110Eax4=\");\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ChatPage","_s","chatLogs","setChatLogs","loginType","setLoginType","userID","setUserID","requestID","setRequestID","sessionStorage","getItem","fetch","method","body","JSON","stringify","data","headers","then","response","json","console","log","catch","error","DisplayPreviousChat","rows","chat","children","fileName","_jsxFileName","lineNumber","columnNumber","chats","Array","from","parse","push","sender","sent","day","month","year","hour","minutes","message","AddChat","currentDate","Date","newChat","document","getElementById","value","dateTime","getDay","getMonth","getFullYear","getHours","getMinutes","type","id","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/cs/home/jm455/Documents/CS4099/Project-code/client/src/pages/ChatPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\n\n\nexport default function ChatPage() {\n    const [chatLogs, setChatLogs] = useState([]);\n    const [loginType, setLoginType] = useState([]);\n    const [userID, setUserID] = useState([]);\n    const [requestID, setRequestID] = useState([]);\n    useEffect(() => {\n        setLoginType(sessionStorage.getItem(\"LoginType\"));\n        setRequestID(sessionStorage.getItem(\"ChatRequestID\"));\n        setUserID(sessionStorage.getItem(\"Username\"));\n        fetch(\"/api/get-chat-logs\", {\n            method: 'POST',\n            body: JSON.stringify({data: [sessionStorage.getItem(\"ChatRequestID\")]}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data[0]);\n            setChatLogs(data[0]);\n        })\n        .catch(error => console.error(error))\n    }, []);\n\n    function DisplayPreviousChat() {\n        let rows = [];\n        if (chatLogs.chat === null) {\n            return <div>Start the discussion</div>\n        }\n        console.log(chatLogs);\n        let chats = Array.from(JSON.parse(chatLogs)); \n        console.log(chatLogs);\n        for (let chat of chats) {\n            rows.push(\n                <diV>\n                    <div>{chat.sender} on {chat.sent.day}/{chat.sent.month}/{chat.sent.year} at {chat.sent.hour}:{chat.sent.minutes}</div>\n                    <div>{chat.message}</div> \n                </diV>\n                \n            )\n        }\n        return rows;\n    }\n\n    function AddChat() {\n        var currentDate = new Date();\n        let newChat = document.getElementById(\"chatEnter\").value;\n        let dateTime = {\n            day: currentDate.getDay(),\n            month: (currentDate.getMonth() + 1),\n            year: currentDate.getFullYear(),\n            hour: currentDate.getHours(),\n            minutes: currentDate.getMinutes()\n        }\n        let data = {\n            sender: userID,\n            message: newChat,\n            sent: dateTime\n        }\n        let chat = [];\n        if (chatLogs.chat === null) {\n            chat.push(data);\n        }\n        else {\n            chat = Array.from(chatLogs); \n            chat.push(data); \n        }\n        fetch(\"/api/add-new-chat\", {\n            method: 'POST',\n            body: JSON.stringify({data: [requestID, chat]}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n        })\n        .catch(error => console.error(error))\n        setChatLogs(chat);\n    }\n    return <div>\n        <div>\n            <h1>Conversation </h1>\n            <DisplayPreviousChat/>\n            <input type=\"text\" id =\"chatEnter\" placeholder=\"Chat\" required/>\n            <button type=\"button\" id=\"button\" onClick={AddChat}>Send</button>\n        </div>\n    </div>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}